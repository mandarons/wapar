name: Production Deployment

on:
  push:
    branches: [main]
  workflow_dispatch:
  schedule: 
    - cron: "0 * * * *"

jobs:
  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache server dependencies
        uses: actions/cache@v4
        id: cache-server
        with:
          path: server/node_modules
          key: ${{ runner.os }}-bun-server-${{ hashFiles('server/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-server-

      - name: Install server dependencies
        if: steps.cache-server.outputs.cache-hit != 'true'
        run: cd server && bun install --frozen-lockfile

      - name: Run server tests
        run: cd server && bun run test --run --reporter=basic

  deploy-backend:
    name: Deploy Backend to Production
    runs-on: ubuntu-latest
    needs: test-backend
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache server dependencies
        uses: actions/cache@v4
        with:
          path: server/node_modules
          key: ${{ runner.os }}-bun-server-${{ hashFiles('server/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-server-

      - name: Install server dependencies (if needed)
        run: cd server && (bun install --frozen-lockfile || true)

      - name: Deploy Workers to production
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy
          workingDirectory: server

  deploy-frontend:
    name: Deploy Frontend to Production
    runs-on: ubuntu-latest
    # Frontend can deploy without waiting for backend tests (parallel optimization)
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache frontend dependencies
        uses: actions/cache@v4
        with:
          path: app/node_modules
          key: ${{ runner.os }}-bun-app-${{ hashFiles('app/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-app-

      - name: Install frontend dependencies (if needed)
        run: cd app && (bun install --frozen-lockfile || true)

      - name: Build frontend
        run: cd app && bun run build
        env:
          PUBLIC_URL: "."
          PUBLIC_API_URL: https://wapar-api.mandarons.com

      - name: Deploy Pages to production
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy app/.svelte-kit/cloudflare --project-name=wapar-frontend --branch=main --commit-dirty=true
