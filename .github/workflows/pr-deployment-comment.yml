name: PR Deployment Comment

on:
  workflow_run:
    workflows: ["Deploy Workers", "Deploy Pages (Frontend)"]
    types:
      - completed

jobs:
  comment:
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success'
    permissions:
      pull-requests: write
      
    steps:
      - name: Get PR number
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const pulls = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: `${context.repo.owner}:${context.payload.workflow_run.head_branch}`
            });
            
            if (pulls.data.length > 0) {
              return pulls.data[0].number;
            }
            return null;

      - name: Post unified deployment comment
        if: steps.pr.outputs.result != 'null'
        uses: actions/github-script@v7
        env:
          CLOUDFLARE_SUBDOMAIN: ${{ secrets.CLOUDFLARE_SUBDOMAIN }}
        with:
          script: |
            const prNumber = ${{ steps.pr.outputs.result }};
            const branchName = context.payload.workflow_run.head_branch;
            const safeBranchName = branchName.toLowerCase().replace(/[^a-z0-9]/g, '-');
            const subdomain = process.env.CLOUDFLARE_SUBDOMAIN;
            
            const workerUrl = `https://wapar-api-staging.${subdomain}`;
            const pagesUrl = `https://${safeBranchName}.wapar.pages.dev`;
            
            const comment = `## ðŸš€ Staging Environment Deployed
            
            Your changes have been deployed to the staging environment!
            
            ### ðŸ”— Deployment URLs
            
            | Component | URL | Status |
            |-----------|-----|--------|
            | **Backend API** | [${workerUrl}](${workerUrl}) | âœ… Deployed |
            | **Frontend** | [${pagesUrl}](${pagesUrl}) | âœ… Deployed |
            
            ### ðŸ“Š Environment Details
            
            - **Environment:** Staging
            - **Branch:** \`${branchName}\`
            - **Database:** \`wapar-db-staging\` (isolated from production)
            - **Integration:** Frontend automatically connects to staging backend
            
            ### ðŸ”„ Auto-Update
            
            These deployments will be automatically updated with new commits to this PR.
            
            ---
            
            <sub>ðŸ’¡ **Tip:** The staging environment uses a separate database, so you can safely test changes without affecting production data.</sub>`;
            
            // Find and update or create comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('ðŸš€ Staging Environment Deployed')
            );
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: comment
              });
            }
