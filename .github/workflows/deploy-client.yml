name: Deploy Pages (Frontend)

on:
  # Deploy production on push to main
  push:
    branches: [main]
    paths:
      - 'app/**'
      - '.github/workflows/deploy-client.yml'
  
  # Deploy preview on pull requests
  pull_request:
    branches: [main]
    paths:
      - 'app/**'
      - '.github/workflows/deploy-client.yml'
  
  # Manual deployment and scheduled updates
  workflow_dispatch:
  schedule: 
    - cron: "0 * * * *"

jobs:
  cache-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Cache bun dependencies
        uses: actions/cache@v4
        id: cache-dependencies
        with:
          path: app/node_modules
          key: ${{ runner.os }}-bun-app-client-${{ hashFiles('app/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-app-client-
      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          cd app && bun install --frozen-lockfile
  
  build-and-deploy:
    needs: [cache-dependencies]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
      pull-requests: write
    
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      
      - name: Restore bun-app-client dependencies
        uses: actions/cache@v4
        with:
          path: app/node_modules
          key: ${{ runner.os }}-bun-app-client-${{ hashFiles('app/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-app-client-
      
      # Set API URL based on environment
      - name: Set API URL for environment
        id: set-api-url
        env:
          CLOUDFLARE_SUBDOMAIN: ${{ secrets.CLOUDFLARE_SUBDOMAIN }}
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "api_url=https://wapar-api-staging.${CLOUDFLARE_SUBDOMAIN}" >> $GITHUB_OUTPUT
            echo "environment=preview" >> $GITHUB_OUTPUT
          else
            echo "api_url=https://wapar-api.mandarons.com" >> $GITHUB_OUTPUT
            echo "environment=production" >> $GITHUB_OUTPUT
          fi
      
      - name: Build
        run: |
          cd app && bun run build
        env:
          PUBLIC_URL: "."
          PUBLIC_API_URL: ${{ steps.set-api-url.outputs.api_url }}
      
      # Deploy to Cloudflare Pages
      # For PRs: Cloudflare automatically creates preview deployments
      # For main: Deploys to production
      - name: Publish to Cloudflare Pages
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy app/.svelte-kit/output/client --project-name=wapar --branch=${{ github.head_ref || github.ref_name }}
